name: PIPELINE CD - DEPLOY

on: 
  push:           
    branches: [ "master" ]

jobs: 
  build-and-push:  
    name: Build and Push Docker Image to Docker Hub  
    runs-on: ubuntu-latest 

    steps: 

      - name: Checkout repository 
        uses: actions/checkout@v3

      - name: Log in to Docker Hub 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 

      - name: Build Docker image 
        run: | 

          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest .

      - name: Push Docker image 
        run: |

          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

  deploy-to-ec2:  
    name: Deploy Docker Container on EC2  
    needs: build-and-push  
    runs-on: ubuntu-latest 

    steps: 

      - name: Setup SSH
        run: |

          mkdir -p ~/.ssh

          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa

          chmod 600 ~/.ssh/id_rsa

          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Criar container no EC2
        run: |

          ssh ubuntu@${{ secrets.EC2_HOST }} "

          docker stop ${{ secrets.DOCKER_CONTAINER_NAME }}   || true

          docker rm -f ${{ secrets.DOCKER_CONTAINER_NAME }}   || true

          docker rmi -f ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }} || true

          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

          docker run -d --name ${{ secrets.DOCKER_CONTAINER_NAME }}  -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          "
